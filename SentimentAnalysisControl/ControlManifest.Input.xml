<?xml version="1.0" encoding="utf-8" ?>
<manifest>
  <control namespace="Michael" constructor="SentimentAnalysisControl" version="0.0.2" display-name-key="SentimentAnalysisControl_Display_Key" description-key="SentimentAnalysisControl_Desc_Key" control-type="standard">
    <!-- property node identifies a specific, configurable piece of data that the control expects from CDS -->
    <type-group name="texts">
      <type>SingleLine.Text</type>
      <type>SingleLine.TextArea</type>
      <type>Multiple</type>
    </type-group>
    <property name="TextValue" display-name-key="TextValue" description-key="Put the value to be analyzed" of-type-group="texts" usage="bound" required="true" />
    <property name="Provider" display-name-key="TextValue" description-key="Select 0 for Microsoft Cognitive Services and 1 for ibm watson (default:0)" of-type="Whole.None" usage="input" required="true" />

    <property name="SentimentValue" display-name-key="SentimentValue" description-key="Put the value to be analyzed" of-type="SingleLine.Text" usage="bound" required="false" />
    <property name="PositiveValue" display-name-key="PositiveValue" description-key="Put the value to be analyzed" of-type="Decimal" usage="bound" required="false" />
    <property name="NeutralValue" display-name-key="NeutralValue" description-key="Put the value to be analyzed" of-type="Decimal" usage="bound" required="false" />
    <property name="NegativeValue" display-name-key="NegativeValue" description-key="Put the value to be analyzed" of-type="Decimal" usage="bound" required="false" />
    <property name="apiEntityName" display-name-key="apiEntityName" description-key="Put the value to be analyzed" of-type="SingleLine.Text" usage="input" required="false" />
    <property name="apiKeyField" display-name-key="apiKeyField" description-key="Put the value to be analyzed" of-type="SingleLine.Text" usage="input" required="false" />
    <property name="apiUrlField" display-name-key="apiUrlField" description-key="Put the value to be analyzed" of-type="SingleLine.Text" usage="input" required="false" />
    <property name="apiFindField" display-name-key="apiFindField" description-key="Put the value to be analyzed" of-type="SingleLine.Text" usage="input" required="false" />
    <property name="apiFindValue" display-name-key="apiFindValue" description-key="Put the value to be analyzed" of-type="SingleLine.Text" usage="input" required="false" />



    <!-- 
      Property node's of-type attribute can be of-type-group attribute. 
      Example:
      <type-group name="numbers">
        <type>Whole.None</type>
        <type>Currency</type>
        <type>FP</type>
        <type>Decimal</type>
      </type-group>
      <property name="sampleProperty" display-name-key="Property_Display_Key" description-key="Property_Desc_Key" of-type-group="numbers" usage="bound" required="true" />
    -->
    <resources>
      <code path="index.ts" order="1"/>
      <css path="css\SentimentAnalysisControl.css" order="1" />

      <!-- UNCOMMENT TO ADD MORE RESOURCES
      <css path="css/SentimentAnalysisControl.css" order="1" />
      <resx path="strings/SentimentAnalysisControl.1033.resx" version="1.0.0" />
      -->
    </resources>
    <!-- UNCOMMENT TO ENABLE THE SPECIFIED API -->
    <feature-usage>
      <!-- <uses-feature name="Device.captureAudio" required="true" />
      <uses-feature name="Device.captureImage" required="true" />
      <uses-feature name="Device.captureVideo" required="true" />
      <uses-feature name="Device.getBarcodeValue" required="true" />
      <uses-feature name="Device.getCurrentPosition" required="true" />
      <uses-feature name="Device.pickFile" required="true" /> -->
      <uses-feature name="Utility" required="true" />
      <uses-feature name="WebAPI" required="true" />
    </feature-usage>

  </control>
</manifest>